{"code":"!function(e){function n(i){if(t[i])return t[i].exports;var r=t[i]={i:i,l:!1,exports:{}};return e[i].call(r.exports,r,r.exports,n),r.l=!0,r.exports}var t={};n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var r in e)n.d(i,r,function(n){return e[n]}.bind(null,r));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},n.p=\"\",n(n.s=0)}([function(e,n,t){\"use strict\";function i(e){return(i=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function r(e){return o(e,[])}function o(e,n){switch(i(e)){case\"string\":return JSON.stringify(e);case\"function\":return e.name?\"[function \".concat(e.name,\"]\"):\"[function]\";case\"object\":return null===e?\"null\":function(e,n){if(-1!==n.indexOf(e))return\"[Circular]\";var t=[].concat(n,[e]),i=function(e){var n=e[oe+\"\"];return\"function\"==typeof n?n:\"function\"==typeof e.inspect?e.inspect:void 0}(e);if(void 0!==i){var r=i.call(e);if(r!==e)return\"string\"==typeof r?r:o(r,t)}else if(Array.isArray(e))return function(e,n){if(0===e.length)return\"[]\";if(n.length>se)return\"[Array]\";for(var t=Math.min(ae,e.length),i=e.length-t,r=[],a=0;a<t;++a)r.push(o(e[a],n));return 1==i?r.push(\"... 1 more item\"):1<i&&r.push(\"... \".concat(i,\" more items\")),\"[\"+r.join(\", \")+\"]\"}(e,t);return function(e,n){var t=Object.keys(e);return 0===t.length?\"{}\":n.length>se?\"[\"+function(e){var n=Object.prototype.toString.call(e).replace(/^\\[object /,\"\").replace(/]$/,\"\");if(\"Object\"===n&&\"function\"==typeof e.constructor){var t=e.constructor.name;if(\"string\"==typeof t&&\"\"!==t)return t}return n}(e)+\"]\":\"{ \"+t.map(function(t){return t+\": \"+o(e[t],n)}).join(\", \")+\" }\"}(e,t)}(e,n);default:return e+\"\"}}function a(e,n){for(var t=Object.create(null),i=0,r=re(e);i<r.length;i++){var o=r[i],a=o[0],s=o[1];t[a]=n(s,a)}return t}function s(e){if(null===Object.getPrototypeOf(e))return e;for(var n=Object.create(null),t=0,i=re(e);t<i.length;t++){var r=i[t],o=r[0],a=r[1];n[o]=a}return n}function u(e,n){if(!e)throw new Error(n)}function c(e,n,t){return e.reduce(function(e,i){return e[n(i)]=t(i),e},Object.create(null))}function p(e){return(p=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function l(e){return\"object\"==p(e)&&null!==e}function f(e){return e}function d(e){var n=1<arguments.length&&void 0!==arguments[1]?arguments[1]:e.prototype.toString;e.prototype.toJSON=n,e.prototype.inspect=n,oe&&(e.prototype[oe]=n)}function y(e){\"function\"==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e.prototype,Symbol.toStringTag,{get:function(){return this.constructor.name}})}function v(e,n){if(!e)throw new Error(n||\"Unexpected invariant triggered\")}function h(e){return void 0===e||e!=e}function m(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter(function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable})),t.push.apply(t,i)}return t}function T(e){for(var n,t=1;t<arguments.length;t++)n=null==arguments[t]?{}:arguments[t],t%2?m(n,!0).forEach(function(t){N(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):m(n).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))});return e}function N(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function E(e){return I(e)||g(e)||b(e)||O(e)||_(e)||A(e)||S(e)||D(e)}function I(e){return ue(e,pe)}function g(e){return ue(e,le)}function b(e){return ue(e,fe)}function O(e){return ue(e,de)}function _(e){return ue(e,ye)}function A(e){return ue(e,ve)}function S(e){return ue(e,L)}function D(e){return ue(e,x)}function L(e){return this instanceof L?void(this.ofType=function(e){if(!E(e))throw new Error(\"Expected \".concat(r(e),\" to be a GraphQL type.\"));return e}(e)):new L(e)}function x(e){return this instanceof x?void(this.ofType=function(e){if(!function(e){return E(e)&&!D(e)}(e))throw new Error(\"Expected \".concat(r(e),\" to be a GraphQL nullable type.\"));return e}(e)):new x(e)}function F(e){return S(e)||D(e)}function w(e){return\"function\"==typeof e?e():e}function j(e){return e&&0<e.length?e:void 0}function R(e){var n=w(e.fields)||{};return V(n)||u(0,\"\".concat(e.name,\" fields must be an object with field names as keys or a function which returns such an object.\")),a(n,function(n,t){V(n)||u(0,\"\".concat(e.name,\".\").concat(t,\" field config must be an object\")),\"isDeprecated\"in n&&u(0,\"\".concat(e.name,\".\").concat(t,' should provide \"deprecationReason\" instead of \"isDeprecated\".')),null==n.resolve||\"function\"==typeof n.resolve||u(0,\"\".concat(e.name,\".\").concat(t,\" field resolver must be a function if \")+\"provided, but got: \".concat(r(n.resolve),\".\"));var i=n.args||{};V(i)||u(0,\"\".concat(e.name,\".\").concat(t,\" args must be an object with argument names as keys.\"));var o=re(i).map(function(e){var n=e[0],t=e[1];return{name:n,description:void 0===t.description?null:t.description,type:t.type,defaultValue:t.defaultValue,extensions:t.extensions&&s(t.extensions),astNode:t.astNode}});return T({},n,{name:t,description:n.description,type:n.type,args:o,resolve:n.resolve,subscribe:n.subscribe,isDeprecated:!!n.deprecationReason,deprecationReason:n.deprecationReason,extensions:n.extensions&&s(n.extensions),astNode:n.astNode})})}function V(e){return l(e)&&!Array.isArray(e)}function U(e){return a(e,function(e){return{description:e.description,type:e.type,args:M(e.args),resolve:e.resolve,subscribe:e.subscribe,deprecationReason:e.deprecationReason,extensions:e.extensions,astNode:e.astNode}})}function M(e){return c(e,function(e){return e.name},function(e){return{description:e.description,type:e.type,defaultValue:e.defaultValue,extensions:e.extensions,astNode:e.astNode}})}function C(e){return!(!e||\"string\"!=typeof e.kind)}function P(e,n,t){var i=e[n];if(i){if(!t&&\"function\"==typeof i)return i;var r=t?i.leave:i.enter;if(\"function\"==typeof r)return r}else{var o=t?e.leave:e.enter;if(o){if(\"function\"==typeof o)return o;var a=o[n];if(\"function\"==typeof a)return a}}}function k(e){return function(e,n){var t=2<arguments.length&&void 0!==arguments[2]?arguments[2]:Te,i=void 0,o=Array.isArray(e),a=[e],s=-1,u=[],c=void 0,p=void 0,l=void 0,f=[],d=[],y=e;do{var v=++s===a.length,h=v&&0!==u.length;if(v){if(p=0===d.length?void 0:f[f.length-1],c=l,l=d.pop(),h){if(o)c=c.slice();else{for(var m,T={},N=0,E=Object.keys(c);N<E.length;N++)T[m=E[N]]=c[m];c=T}for(var I=0,g=0;g<u.length;g++){var b=u[g][0],O=u[g][1];o&&(b-=I),o&&null===O?(c.splice(b,1),I++):c[b]=O}}s=i.index,a=i.keys,u=i.edits,o=i.inArray,i=i.prev}else{if(p=l?o?s:a[s]:void 0,null==(c=l?l[p]:y))continue;l&&f.push(p)}var _=void 0;if(!Array.isArray(c)){if(!C(c))throw new Error(\"Invalid AST Node: \"+r(c));var A=P(n,c.kind,v);if(A){if((_=A.call(n,c,p,l,f,d))===Ne)break;if(!1===_){if(!v){f.pop();continue}}else if(void 0!==_&&(u.push([p,_]),!v)){if(!C(_)){f.pop();continue}c=_}}}void 0===_&&h&&u.push([p,c]),v?f.pop():(i={inArray:o,index:s,keys:a,edits:u,prev:i},a=(o=Array.isArray(c))?c:t[c.kind]||[],s=-1,u=[],l&&d.push(l),l=c)}while(null!=i);return 0!==u.length&&(y=u[u.length-1][1]),y}(e,{leave:Ee})}function B(e){return function(n){return G([n.description,e(n)],\"\\n\")}}function G(e,n){return e?e.filter(function(e){return e}).join(n||\"\"):\"\"}function J(e){return e&&0!==e.length?\"{\\n\"+Q(G(e,\"\\n\"))+\"\\n}\":\"\"}function z(e,n,t){return n?e+n+(t||\"\"):\"\"}function Q(e){return e&&\"  \"+e.replace(/\\n/g,\"\\n  \")}function Y(e){return-1!==e.indexOf(\"\\n\")}function q(e){return e&&e.some(Y)}function H(e){var n=null!=e&&e.length;return\"number\"==typeof n&&0<=n&&0==n%1}function X(e){return Object(e)===e&&(H(e)||function(e){return!!$(e)}(e))}function $(e){if(null!=e){var n=be&&e[be]||e[\"@@iterator\"];if(\"function\"==typeof n)return n}}function K(e){this._o=e,this._i=0}function W(e,n,t){if(null!=e){if(\"function\"==typeof e.forEach)return e.forEach(n,t);var i=0,r=function(e){var n=$(e);if(n)return n.call(e)}(e);if(r){for(var o;!(o=r.next()).done;)if(n.call(t,o.value,i++,e),9999999<i)throw new TypeError(\"Near-infinite iteration.\")}else if(H(e))for(;i<e.length;i++)e.hasOwnProperty(i)&&n.call(t,e[i],i,e)}}function Z(e){this._i=e}function ee(e){if(l(e)){if(\"function\"==typeof e.valueOf){var n=e.valueOf();if(!l(n))return n}if(\"function\"==typeof e.toJSON)return e.toJSON()}return e}function ne(e,n){if(D(n)){var t=ne(e,n.ofType);return t&&t.kind===ce.NULL?null:t}if(null===e)return{kind:ce.NULL};if(h(e))return null;if(S(n)){var i=n.ofType;if(X(e)){var o=[];return W(e,function(e){var n=ne(e,i);n&&o.push(n)}),{kind:ce.LIST,values:o}}return ne(e,i)}if(A(n)){if(!l(e))return null;for(var a=[],s=0,u=me(n.getFields());s<u.length;s++){var c=u[s],p=ne(e[c.name],c.type);p&&a.push({kind:ce.OBJECT_FIELD,name:{kind:ce.NAME,value:c.name},value:p})}return{kind:ce.OBJECT,fields:a}}if(function(e){return I(e)||_(e)}(n)){var f=n.serialize(e);if(function(e){return null==e||e!=e}(f))return null;if(\"boolean\"==typeof f)return{kind:ce.BOOLEAN,value:f};if(\"number\"==typeof f){var d=f+\"\";return Re.test(d)?{kind:ce.INT,value:d}:{kind:ce.FLOAT,value:d}}if(\"string\"==typeof f)return _(n)?{kind:ce.ENUM,value:f}:n===je&&Re.test(f)?{kind:ce.INT,value:f}:{kind:ce.STRING,value:f};throw new TypeError(\"Cannot convert value to AST: \".concat(r(f)))}v(!1,\"Unexpected input type: \"+r(n))}function te(e,n){if(!n)return e;var t=function(e){if(e){for(var n=e;F(n);)n=n.ofType;return n}}(n),i=e[t.name];if(i){if(i!==t)throw new Error('Schema must contain uniquely named types but contains multiple types named \"'.concat(t.name,'\".'));return e}e[t.name]=t;var r=e;if(O(t)&&(r=t.getTypes().reduce(te,r)),g(t)&&(r=t.getInterfaces().reduce(te,r)),g(t)||b(t))for(var o=0,a=me(t.getFields());o<a.length;o++){var s=a[o];r=te(r=s.args.map(function(e){return e.type}).reduce(te,r),s.type)}if(A(t))for(var u=0,c=me(t.getFields());u<c.length;u++)r=te(r,c[u].type);return r}function ie(e,n){return function(e){return ue(e,ze)}(n)?n.args.reduce(function(e,n){return te(e,n.type)},e):e}t.r(n);var re=Object.entries||function(e){return Object.keys(e).map(function(n){return[n,e[n]]})},oe=\"function\"==typeof Symbol&&\"function\"==typeof Symbol.for?Symbol.for(\"nodejs.util.inspect.custom\"):void 0,ae=10,se=2,ue=function(e,n){return e instanceof n},ce=Object.freeze({NAME:\"Name\",DOCUMENT:\"Document\",OPERATION_DEFINITION:\"OperationDefinition\",VARIABLE_DEFINITION:\"VariableDefinition\",SELECTION_SET:\"SelectionSet\",FIELD:\"Field\",ARGUMENT:\"Argument\",FRAGMENT_SPREAD:\"FragmentSpread\",INLINE_FRAGMENT:\"InlineFragment\",FRAGMENT_DEFINITION:\"FragmentDefinition\",VARIABLE:\"Variable\",INT:\"IntValue\",FLOAT:\"FloatValue\",STRING:\"StringValue\",BOOLEAN:\"BooleanValue\",NULL:\"NullValue\",ENUM:\"EnumValue\",LIST:\"ListValue\",OBJECT:\"ObjectValue\",OBJECT_FIELD:\"ObjectField\",DIRECTIVE:\"Directive\",NAMED_TYPE:\"NamedType\",LIST_TYPE:\"ListType\",NON_NULL_TYPE:\"NonNullType\",SCHEMA_DEFINITION:\"SchemaDefinition\",OPERATION_TYPE_DEFINITION:\"OperationTypeDefinition\",SCALAR_TYPE_DEFINITION:\"ScalarTypeDefinition\",OBJECT_TYPE_DEFINITION:\"ObjectTypeDefinition\",FIELD_DEFINITION:\"FieldDefinition\",INPUT_VALUE_DEFINITION:\"InputValueDefinition\",INTERFACE_TYPE_DEFINITION:\"InterfaceTypeDefinition\",UNION_TYPE_DEFINITION:\"UnionTypeDefinition\",ENUM_TYPE_DEFINITION:\"EnumTypeDefinition\",ENUM_VALUE_DEFINITION:\"EnumValueDefinition\",INPUT_OBJECT_TYPE_DEFINITION:\"InputObjectTypeDefinition\",DIRECTIVE_DEFINITION:\"DirectiveDefinition\",SCHEMA_EXTENSION:\"SchemaExtension\",SCALAR_TYPE_EXTENSION:\"ScalarTypeExtension\",OBJECT_TYPE_EXTENSION:\"ObjectTypeExtension\",INTERFACE_TYPE_EXTENSION:\"InterfaceTypeExtension\",UNION_TYPE_EXTENSION:\"UnionTypeExtension\",ENUM_TYPE_EXTENSION:\"EnumTypeExtension\",INPUT_OBJECT_TYPE_EXTENSION:\"InputObjectTypeExtension\"});L.prototype.toString=function(){return\"[\"+this.ofType+\"]\"},y(L),d(L),x.prototype.toString=function(){return this.ofType+\"!\"},y(x),d(x);var pe=function(){function e(e){var n=e.parseValue||f;this.name=e.name,this.description=e.description,this.serialize=e.serialize||f,this.parseValue=n,this.parseLiteral=e.parseLiteral||function(e){return n(function e(n,t){switch(n.kind){case ce.NULL:return null;case ce.INT:return parseInt(n.value,10);case ce.FLOAT:return parseFloat(n.value);case ce.STRING:case ce.ENUM:case ce.BOOLEAN:return n.value;case ce.LIST:return n.values.map(function(n){return e(n,t)});case ce.OBJECT:return c(n.fields,function(e){return e.name.value},function(n){return e(n.value,t)});case ce.VARIABLE:var i=n.name.value;return t&&!h(t[i])?t[i]:void 0}v(!1,\"Unexpected value node: \"+r(n))}(e))},this.extensions=e.extensions&&s(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=j(e.extensionASTNodes),\"string\"==typeof e.name||u(0,\"Must provide name.\"),null==e.serialize||\"function\"==typeof e.serialize||u(0,\"\".concat(this.name,' must provide \"serialize\" function. If this custom Scalar is also used as an input type, ensure \"parseValue\" and \"parseLiteral\" functions are also provided.')),e.parseLiteral&&(\"function\"==typeof e.parseValue&&\"function\"==typeof e.parseLiteral||u(0,\"\".concat(this.name,' must provide both \"parseValue\" and \"parseLiteral\" functions.')))}var n=e.prototype;return n.toConfig=function(){return{name:this.name,description:this.description,serialize:this.serialize,parseValue:this.parseValue,parseLiteral:this.parseLiteral,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes||[]}},n.toString=function(){return this.name},e}();y(pe),d(pe);var le=function(){function e(e){this.name=e.name,this.description=e.description,this.isTypeOf=e.isTypeOf,this.extensions=e.extensions&&s(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=j(e.extensionASTNodes),this._fields=R.bind(void 0,e),this._interfaces=function(e){var n=w(e.interfaces)||[];return Array.isArray(n)||u(0,\"\".concat(e.name,\" interfaces must be an Array or a function which returns an Array.\")),n}.bind(void 0,e),\"string\"==typeof e.name||u(0,\"Must provide name.\"),null==e.isTypeOf||\"function\"==typeof e.isTypeOf||u(0,\"\".concat(this.name,' must provide \"isTypeOf\" as a function, ')+\"but got: \".concat(r(e.isTypeOf),\".\"))}var n=e.prototype;return n.getFields=function(){return\"function\"==typeof this._fields&&(this._fields=this._fields()),this._fields},n.getInterfaces=function(){return\"function\"==typeof this._interfaces&&(this._interfaces=this._interfaces()),this._interfaces},n.toConfig=function(){return{name:this.name,description:this.description,interfaces:this.getInterfaces(),fields:U(this.getFields()),isTypeOf:this.isTypeOf,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes||[]}},n.toString=function(){return this.name},e}();y(le),d(le);var fe=function(){function e(e){this.name=e.name,this.description=e.description,this.resolveType=e.resolveType,this.extensions=e.extensions&&s(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=j(e.extensionASTNodes),this._fields=R.bind(void 0,e),\"string\"==typeof e.name||u(0,\"Must provide name.\"),null==e.resolveType||\"function\"==typeof e.resolveType||u(0,\"\".concat(this.name,' must provide \"resolveType\" as a function, ')+\"but got: \".concat(r(e.resolveType),\".\"))}var n=e.prototype;return n.getFields=function(){return\"function\"==typeof this._fields&&(this._fields=this._fields()),this._fields},n.toConfig=function(){return{name:this.name,description:this.description,fields:U(this.getFields()),resolveType:this.resolveType,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes||[]}},n.toString=function(){return this.name},e}();y(fe),d(fe);var de=function(){function e(e){this.name=e.name,this.description=e.description,this.resolveType=e.resolveType,this.extensions=e.extensions&&s(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=j(e.extensionASTNodes),this._types=function(e){var n=w(e.types)||[];return Array.isArray(n)||u(0,\"Must provide Array of types or a function which returns such an array for Union \".concat(e.name,\".\")),n}.bind(void 0,e),\"string\"==typeof e.name||u(0,\"Must provide name.\"),null==e.resolveType||\"function\"==typeof e.resolveType||u(0,\"\".concat(this.name,' must provide \"resolveType\" as a function, ')+\"but got: \".concat(r(e.resolveType),\".\"))}var n=e.prototype;return n.getTypes=function(){return\"function\"==typeof this._types&&(this._types=this._types()),this._types},n.toConfig=function(){return{name:this.name,description:this.description,types:this.getTypes(),resolveType:this.resolveType,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes||[]}},n.toString=function(){return this.name},e}();y(de),d(de);var ye=function(){function e(e){this.name=e.name,this.description=e.description,this.extensions=e.extensions&&s(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=j(e.extensionASTNodes),this._values=function(e,n){return V(n)||u(0,\"\".concat(e,\" values must be an object with value names as keys.\")),re(n).map(function(n){var t=n[0],i=n[1];return V(i)||u(0,\"\".concat(e,\".\").concat(t,' must refer to an object with a \"value\" key ')+\"representing an internal value but got: \".concat(r(i),\".\")),\"isDeprecated\"in i&&u(0,\"\".concat(e,\".\").concat(t,' should provide \"deprecationReason\" instead of \"isDeprecated\".')),{name:t,description:i.description,value:\"value\"in i?i.value:t,isDeprecated:!!i.deprecationReason,deprecationReason:i.deprecationReason,extensions:i.extensions&&s(i.extensions),astNode:i.astNode}})}(this.name,e.values),this._valueLookup=new Map(this._values.map(function(e){return[e.value,e]})),this._nameLookup=function(e,n){return e.reduce(function(e,t){return e[n(t)]=t,e},Object.create(null))}(this._values,function(e){return e.name}),\"string\"==typeof e.name||u(0,\"Must provide name.\")}var n=e.prototype;return n.getValues=function(){return this._values},n.getValue=function(e){return this._nameLookup[e]},n.serialize=function(e){var n=this._valueLookup.get(e);if(n)return n.name},n.parseValue=function(e){if(\"string\"==typeof e){var n=this.getValue(e);if(n)return n.value}},n.parseLiteral=function(e){if(e.kind===ce.ENUM){var n=this.getValue(e.value);if(n)return n.value}},n.toConfig=function(){var e=c(this.getValues(),function(e){return e.name},function(e){return{description:e.description,value:e.value,deprecationReason:e.deprecationReason,extensions:e.extensions,astNode:e.astNode}});return{name:this.name,description:this.description,values:e,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes||[]}},n.toString=function(){return this.name},e}();y(ye),d(ye);var ve=function(){function e(e){this.name=e.name,this.description=e.description,this.extensions=e.extensions&&s(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=j(e.extensionASTNodes),this._fields=function(e){var n=w(e.fields)||{};return V(n)||u(0,\"\".concat(e.name,\" fields must be an object with field names as keys or a function which returns such an object.\")),a(n,function(n,t){return\"resolve\"in n&&u(0,\"\".concat(e.name,\".\").concat(t,\" field has a resolve property, but Input Types cannot define resolvers.\")),T({},n,{name:t,description:n.description,type:n.type,defaultValue:n.defaultValue,extensions:n.extensions&&s(n.extensions),astNode:n.astNode})})}.bind(void 0,e),\"string\"==typeof e.name||u(0,\"Must provide name.\")}var n=e.prototype;return n.getFields=function(){return\"function\"==typeof this._fields&&(this._fields=this._fields()),this._fields},n.toConfig=function(){var e=a(this.getFields(),function(e){return{description:e.description,type:e.type,defaultValue:e.defaultValue,extensions:e.extensions,astNode:e.astNode}});return{name:this.name,description:this.description,fields:e,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes||[]}},n.toString=function(){return this.name},e}();y(ve),d(ve);var he=Array.prototype.find?function(e,n){return Array.prototype.find.call(e,n)}:function(e,n){for(var t,i=0;i<e.length;i++)if(n(t=e[i]))return t},me=Object.values||function(e){return Object.keys(e).map(function(n){return e[n]})},Te={Name:[],Document:[\"definitions\"],OperationDefinition:[\"name\",\"variableDefinitions\",\"directives\",\"selectionSet\"],VariableDefinition:[\"variable\",\"type\",\"defaultValue\",\"directives\"],Variable:[\"name\"],SelectionSet:[\"selections\"],Field:[\"alias\",\"name\",\"arguments\",\"directives\",\"selectionSet\"],Argument:[\"name\",\"value\"],FragmentSpread:[\"name\",\"directives\"],InlineFragment:[\"typeCondition\",\"directives\",\"selectionSet\"],FragmentDefinition:[\"name\",\"variableDefinitions\",\"typeCondition\",\"directives\",\"selectionSet\"],IntValue:[],FloatValue:[],StringValue:[],BooleanValue:[],NullValue:[],EnumValue:[],ListValue:[\"values\"],ObjectValue:[\"fields\"],ObjectField:[\"name\",\"value\"],Directive:[\"name\",\"arguments\"],NamedType:[\"name\"],ListType:[\"type\"],NonNullType:[\"type\"],SchemaDefinition:[\"directives\",\"operationTypes\"],OperationTypeDefinition:[\"type\"],ScalarTypeDefinition:[\"description\",\"name\",\"directives\"],ObjectTypeDefinition:[\"description\",\"name\",\"interfaces\",\"directives\",\"fields\"],FieldDefinition:[\"description\",\"name\",\"arguments\",\"type\",\"directives\"],InputValueDefinition:[\"description\",\"name\",\"type\",\"defaultValue\",\"directives\"],InterfaceTypeDefinition:[\"description\",\"name\",\"directives\",\"fields\"],UnionTypeDefinition:[\"description\",\"name\",\"directives\",\"types\"],EnumTypeDefinition:[\"description\",\"name\",\"directives\",\"values\"],EnumValueDefinition:[\"description\",\"name\",\"directives\"],InputObjectTypeDefinition:[\"description\",\"name\",\"directives\",\"fields\"],DirectiveDefinition:[\"description\",\"name\",\"arguments\",\"locations\"],SchemaExtension:[\"directives\",\"operationTypes\"],ScalarTypeExtension:[\"name\",\"directives\"],ObjectTypeExtension:[\"name\",\"interfaces\",\"directives\",\"fields\"],InterfaceTypeExtension:[\"name\",\"directives\",\"fields\"],UnionTypeExtension:[\"name\",\"directives\",\"types\"],EnumTypeExtension:[\"name\",\"directives\",\"values\"],InputObjectTypeExtension:[\"name\",\"directives\",\"fields\"]},Ne=Object.freeze({}),Ee={Name:function(e){return e.value},Variable:function(e){return\"$\"+e.name},Document:function(e){return G(e.definitions,\"\\n\\n\")+\"\\n\"},OperationDefinition:function(e){var n=e.operation,t=e.name,i=z(\"(\",G(e.variableDefinitions,\", \"),\")\"),r=G(e.directives,\" \"),o=e.selectionSet;return t||r||i||\"query\"!==n?G([n,G([t,i]),r,o],\" \"):o},VariableDefinition:function(e){var n=e.variable,t=e.type,i=e.defaultValue,r=e.directives;return n+\": \"+t+z(\" = \",i)+z(\" \",G(r,\" \"))},SelectionSet:function(e){return J(e.selections)},Field:function(e){var n=e.alias,t=e.name,i=e.arguments,r=e.directives,o=e.selectionSet;return G([z(\"\",n,\": \")+t+z(\"(\",G(i,\", \"),\")\"),G(r,\" \"),o],\" \")},Argument:function(e){return e.name+\": \"+e.value},FragmentSpread:function(e){return\"...\"+e.name+z(\" \",G(e.directives,\" \"))},InlineFragment:function(e){var n=e.typeCondition,t=e.directives,i=e.selectionSet;return G([\"...\",z(\"on \",n),G(t,\" \"),i],\" \")},FragmentDefinition:function(e){var n=e.name,t=e.typeCondition,i=e.variableDefinitions,r=e.directives,o=e.selectionSet;return\"fragment \".concat(n).concat(z(\"(\",G(i,\", \"),\")\"),\" \")+\"on \".concat(t,\" \").concat(z(\"\",G(r,\" \"),\" \"))+o},IntValue:function(e){return e.value},FloatValue:function(e){return e.value},StringValue:function(e,n){var t=e.value;return e.block?function(e){var n=1<arguments.length&&void 0!==arguments[1]?arguments[1]:\"\",t=2<arguments.length&&void 0!==arguments[2]&&arguments[2],i=-1===e.indexOf(\"\\n\"),r=\" \"===e[0]||\"\\t\"===e[0],o='\"'===e[e.length-1],a=!i||o||t,s=\"\";return a&&!(i&&r)&&(s+=\"\\n\"+n),s+=n?e.replace(/\\n/g,\"\\n\"+n):e,a&&(s+=\"\\n\"),'\"\"\"'+s.replace(/\"\"\"/g,'\\\\\"\"\"')+'\"\"\"'}(t,\"description\"===n?\"\":\"  \"):JSON.stringify(t)},BooleanValue:function(e){return e.value?\"true\":\"false\"},NullValue:function(){return\"null\"},EnumValue:function(e){return e.value},ListValue:function(e){return\"[\"+G(e.values,\", \")+\"]\"},ObjectValue:function(e){return\"{\"+G(e.fields,\", \")+\"}\"},ObjectField:function(e){return e.name+\": \"+e.value},Directive:function(e){return\"@\"+e.name+z(\"(\",G(e.arguments,\", \"),\")\")},NamedType:function(e){return e.name},ListType:function(e){return\"[\"+e.type+\"]\"},NonNullType:function(e){return e.type+\"!\"},SchemaDefinition:function(e){var n=e.directives,t=e.operationTypes;return G([\"schema\",G(n,\" \"),J(t)],\" \")},OperationTypeDefinition:function(e){return e.operation+\": \"+e.type},ScalarTypeDefinition:B(function(e){return G([\"scalar\",e.name,G(e.directives,\" \")],\" \")}),ObjectTypeDefinition:B(function(e){var n=e.name,t=e.interfaces,i=e.directives,r=e.fields;return G([\"type\",n,z(\"implements \",G(t,\" & \")),G(i,\" \"),J(r)],\" \")}),FieldDefinition:B(function(e){var n=e.name,t=e.arguments,i=e.type,r=e.directives;return n+(q(t)?z(\"(\\n\",Q(G(t,\"\\n\")),\"\\n)\"):z(\"(\",G(t,\", \"),\")\"))+\": \"+i+z(\" \",G(r,\" \"))}),InputValueDefinition:B(function(e){var n=e.name,t=e.type,i=e.defaultValue,r=e.directives;return G([n+\": \"+t,z(\"= \",i),G(r,\" \")],\" \")}),InterfaceTypeDefinition:B(function(e){var n=e.name,t=e.directives,i=e.fields;return G([\"interface\",n,G(t,\" \"),J(i)],\" \")}),UnionTypeDefinition:B(function(e){var n=e.name,t=e.directives,i=e.types;return G([\"union\",n,G(t,\" \"),i&&0!==i.length?\"= \"+G(i,\" | \"):\"\"],\" \")}),EnumTypeDefinition:B(function(e){var n=e.name,t=e.directives,i=e.values;return G([\"enum\",n,G(t,\" \"),J(i)],\" \")}),EnumValueDefinition:B(function(e){return G([e.name,G(e.directives,\" \")],\" \")}),InputObjectTypeDefinition:B(function(e){var n=e.name,t=e.directives,i=e.fields;return G([\"input\",n,G(t,\" \"),J(i)],\" \")}),DirectiveDefinition:B(function(e){var n=e.name,t=e.arguments,i=e.repeatable,r=e.locations;return\"directive @\"+n+(q(t)?z(\"(\\n\",Q(G(t,\"\\n\")),\"\\n)\"):z(\"(\",G(t,\", \"),\")\"))+(i?\" repeatable\":\"\")+\" on \"+G(r,\" | \")}),SchemaExtension:function(e){var n=e.directives,t=e.operationTypes;return G([\"extend schema\",G(n,\" \"),J(t)],\" \")},ScalarTypeExtension:function(e){return G([\"extend scalar\",e.name,G(e.directives,\" \")],\" \")},ObjectTypeExtension:function(e){var n=e.name,t=e.interfaces,i=e.directives,r=e.fields;return G([\"extend type\",n,z(\"implements \",G(t,\" & \")),G(i,\" \"),J(r)],\" \")},InterfaceTypeExtension:function(e){var n=e.name,t=e.directives,i=e.fields;return G([\"extend interface\",n,G(t,\" \"),J(i)],\" \")},UnionTypeExtension:function(e){var n=e.name,t=e.directives,i=e.types;return G([\"extend union\",n,G(t,\" \"),i&&0!==i.length?\"= \"+G(i,\" | \"):\"\"],\" \")},EnumTypeExtension:function(e){var n=e.name,t=e.directives,i=e.values;return G([\"extend enum\",n,G(t,\" \"),J(i)],\" \")},InputObjectTypeExtension:function(e){var n=e.name,t=e.directives,i=e.fields;return G([\"extend input\",n,G(t,\" \"),J(i)],\" \")}},Ie=Object.freeze({QUERY:\"QUERY\",MUTATION:\"MUTATION\",SUBSCRIPTION:\"SUBSCRIPTION\",FIELD:\"FIELD\",FRAGMENT_DEFINITION:\"FRAGMENT_DEFINITION\",FRAGMENT_SPREAD:\"FRAGMENT_SPREAD\",INLINE_FRAGMENT:\"INLINE_FRAGMENT\",VARIABLE_DEFINITION:\"VARIABLE_DEFINITION\",SCHEMA:\"SCHEMA\",SCALAR:\"SCALAR\",OBJECT:\"OBJECT\",FIELD_DEFINITION:\"FIELD_DEFINITION\",ARGUMENT_DEFINITION:\"ARGUMENT_DEFINITION\",INTERFACE:\"INTERFACE\",UNION:\"UNION\",ENUM:\"ENUM\",ENUM_VALUE:\"ENUM_VALUE\",INPUT_OBJECT:\"INPUT_OBJECT\",INPUT_FIELD_DEFINITION:\"INPUT_FIELD_DEFINITION\"}),ge=\"function\"==typeof Symbol?Symbol:void 0,be=ge&&ge.iterator;K.prototype[be||\"@@iterator\"]=function(){return this},K.prototype.next=function(){return void 0===this._o||this._i>=this._o.length?(this._o=void 0,{value:void 0,done:!0}):{value:this._o[this._i++],done:!1}};var Oe=ge&&ge.asyncIterator;Z.prototype[Oe||\"@@asyncIterator\"]=function(){return this},Z.prototype.next=function(){var e=this._i.next();return Promise.resolve(e.value).then(function(n){return{value:n,done:e.done}})};var _e=Number.isFinite||function(e){return\"number\"==typeof e&&isFinite(e)},Ae=Number.isInteger||function(e){return\"number\"==typeof e&&isFinite(e)&&Math.floor(e)===e},Se=2147483647,De=-2147483648,Le=new pe({name:\"Int\",description:\"The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.\",serialize:function(e){if(\"boolean\"==typeof e)return e?1:0;var n=e;if(\"string\"==typeof e&&\"\"!==e&&(n=+e),!Ae(n))throw new TypeError(\"Int cannot represent non-integer value: \".concat(r(e)));if(n>Se||n<De)throw new TypeError(\"Int cannot represent non 32-bit signed integer value: \".concat(r(e)));return n},parseValue:function(e){if(!Ae(e))throw new TypeError(\"Int cannot represent non-integer value: \".concat(r(e)));if(e>Se||e<De)throw new TypeError(\"Int cannot represent non 32-bit signed integer value: \".concat(r(e)));return e},parseLiteral:function(e){if(e.kind===ce.INT){var n=parseInt(e.value,10);if(n<=Se&&n>=De)return n}}}),xe=new pe({name:\"Float\",description:\"The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).\",serialize:function(e){if(\"boolean\"==typeof e)return e?1:0;var n=e;if(\"string\"==typeof e&&\"\"!==e&&(n=+e),!_e(n))throw new TypeError(\"Float cannot represent non numeric value: \".concat(r(e)));return n},parseValue:function(e){if(!_e(e))throw new TypeError(\"Float cannot represent non numeric value: \".concat(r(e)));return e},parseLiteral:function(e){return e.kind===ce.FLOAT||e.kind===ce.INT?parseFloat(e.value):void 0}}),Fe=new pe({name:\"String\",description:\"The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.\",serialize:function(e){var n=ee(e);if(\"string\"==typeof n)return n;if(\"boolean\"==typeof n)return n?\"true\":\"false\";if(_e(n))return n.toString();throw new TypeError(\"String cannot represent value: \".concat(r(e)))},parseValue:function(e){if(\"string\"!=typeof e)throw new TypeError(\"String cannot represent a non string value: \".concat(r(e)));return e},parseLiteral:function(e){return e.kind===ce.STRING?e.value:void 0}}),we=new pe({name:\"Boolean\",description:\"The `Boolean` scalar type represents `true` or `false`.\",serialize:function(e){if(\"boolean\"==typeof e)return e;if(_e(e))return 0!==e;throw new TypeError(\"Boolean cannot represent a non boolean value: \".concat(r(e)))},parseValue:function(e){if(\"boolean\"!=typeof e)throw new TypeError(\"Boolean cannot represent a non boolean value: \".concat(r(e)));return e},parseLiteral:function(e){return e.kind===ce.BOOLEAN?e.value:void 0}}),je=new pe({name:\"ID\",description:'The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID.',serialize:function(e){var n=ee(e);if(\"string\"==typeof n)return n;if(Ae(n))return n+\"\";throw new TypeError(\"ID cannot represent value: \".concat(r(e)))},parseValue:function(e){if(\"string\"==typeof e)return e;if(Ae(e))return e.toString();throw new TypeError(\"ID cannot represent value: \".concat(r(e)))},parseLiteral:function(e){return e.kind===ce.STRING||e.kind===ce.INT?e.value:void 0}}),Re=(Object.freeze([Fe,Le,xe,we,je]),/^-?(?:0|[1-9][0-9]*)$/),Ve=new le({name:\"__Schema\",description:\"A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.\",fields:function(){return{types:{description:\"A list of all types supported by this server.\",type:x(L(x(Ce))),resolve:function(e){return me(e.getTypeMap())}},queryType:{description:\"The type that query operations will be rooted at.\",type:x(Ce),resolve:function(e){return e.getQueryType()}},mutationType:{description:\"If this server supports mutation, the type that mutation operations will be rooted at.\",type:Ce,resolve:function(e){return e.getMutationType()}},subscriptionType:{description:\"If this server support subscription, the type that subscription operations will be rooted at.\",type:Ce,resolve:function(e){return e.getSubscriptionType()}},directives:{description:\"A list of all directives supported by this server.\",type:x(L(x(Ue))),resolve:function(e){return e.getDirectives()}}}}}),Ue=new le({name:\"__Directive\",description:\"A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\\n\\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.\",fields:function(){return{name:{type:x(Fe),resolve:function(e){return e.name}},description:{type:Fe,resolve:function(e){return e.description}},locations:{type:x(L(x(Me))),resolve:function(e){return e.locations}},args:{type:x(L(x(ke))),resolve:function(e){return e.args}}}}}),Me=new ye({name:\"__DirectiveLocation\",description:\"A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.\",values:{QUERY:{value:Ie.QUERY,description:\"Location adjacent to a query operation.\"},MUTATION:{value:Ie.MUTATION,description:\"Location adjacent to a mutation operation.\"},SUBSCRIPTION:{value:Ie.SUBSCRIPTION,description:\"Location adjacent to a subscription operation.\"},FIELD:{value:Ie.FIELD,description:\"Location adjacent to a field.\"},FRAGMENT_DEFINITION:{value:Ie.FRAGMENT_DEFINITION,description:\"Location adjacent to a fragment definition.\"},FRAGMENT_SPREAD:{value:Ie.FRAGMENT_SPREAD,description:\"Location adjacent to a fragment spread.\"},INLINE_FRAGMENT:{value:Ie.INLINE_FRAGMENT,description:\"Location adjacent to an inline fragment.\"},VARIABLE_DEFINITION:{value:Ie.VARIABLE_DEFINITION,description:\"Location adjacent to a variable definition.\"},SCHEMA:{value:Ie.SCHEMA,description:\"Location adjacent to a schema definition.\"},SCALAR:{value:Ie.SCALAR,description:\"Location adjacent to a scalar definition.\"},OBJECT:{value:Ie.OBJECT,description:\"Location adjacent to an object type definition.\"},FIELD_DEFINITION:{value:Ie.FIELD_DEFINITION,description:\"Location adjacent to a field definition.\"},ARGUMENT_DEFINITION:{value:Ie.ARGUMENT_DEFINITION,description:\"Location adjacent to an argument definition.\"},INTERFACE:{value:Ie.INTERFACE,description:\"Location adjacent to an interface definition.\"},UNION:{value:Ie.UNION,description:\"Location adjacent to a union definition.\"},ENUM:{value:Ie.ENUM,description:\"Location adjacent to an enum definition.\"},ENUM_VALUE:{value:Ie.ENUM_VALUE,description:\"Location adjacent to an enum value definition.\"},INPUT_OBJECT:{value:Ie.INPUT_OBJECT,description:\"Location adjacent to an input object type definition.\"},INPUT_FIELD_DEFINITION:{value:Ie.INPUT_FIELD_DEFINITION,description:\"Location adjacent to an input object field definition.\"}}}),Ce=new le({name:\"__Type\",description:\"The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\\n\\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name and description, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.\",fields:function(){return{kind:{type:x(Je),resolve:function(e){return I(e)?Ge.SCALAR:g(e)?Ge.OBJECT:b(e)?Ge.INTERFACE:O(e)?Ge.UNION:_(e)?Ge.ENUM:A(e)?Ge.INPUT_OBJECT:S(e)?Ge.LIST:D(e)?Ge.NON_NULL:void v(!1,'Unexpected type: \"'.concat(r(e),'\".'))}},name:{type:Fe,resolve:function(e){return void 0===e.name?void 0:e.name}},description:{type:Fe,resolve:function(e){return void 0===e.description?void 0:e.description}},fields:{type:L(x(Pe)),args:{includeDeprecated:{type:we,defaultValue:!1}},resolve:function(e,n){var t=n.includeDeprecated;if(g(e)||b(e)){var i=me(e.getFields());return t||(i=i.filter(function(e){return!e.deprecationReason})),i}return null}},interfaces:{type:L(x(Ce)),resolve:function(e){if(g(e))return e.getInterfaces()}},possibleTypes:{type:L(x(Ce)),resolve:function(e,n,t,i){var r=i.schema;if(function(e){return b(e)||O(e)}(e))return r.getPossibleTypes(e)}},enumValues:{type:L(x(Be)),args:{includeDeprecated:{type:we,defaultValue:!1}},resolve:function(e,n){var t=n.includeDeprecated;if(_(e)){var i=e.getValues();return t||(i=i.filter(function(e){return!e.deprecationReason})),i}}},inputFields:{type:L(x(ke)),resolve:function(e){if(A(e))return me(e.getFields())}},ofType:{type:Ce,resolve:function(e){return void 0===e.ofType?void 0:e.ofType}}}}}),Pe=new le({name:\"__Field\",description:\"Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.\",fields:function(){return{name:{type:x(Fe),resolve:function(e){return e.name}},description:{type:Fe,resolve:function(e){return e.description}},args:{type:x(L(x(ke))),resolve:function(e){return e.args}},type:{type:x(Ce),resolve:function(e){return e.type}},isDeprecated:{type:x(we),resolve:function(e){return e.isDeprecated}},deprecationReason:{type:Fe,resolve:function(e){return e.deprecationReason}}}}}),ke=new le({name:\"__InputValue\",description:\"Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.\",fields:function(){return{name:{type:x(Fe),resolve:function(e){return e.name}},description:{type:Fe,resolve:function(e){return e.description}},type:{type:x(Ce),resolve:function(e){return e.type}},defaultValue:{type:Fe,description:\"A GraphQL-formatted string representing the default value for this input value.\",resolve:function(e){var n=ne(e.defaultValue,e.type);return n?k(n):null}}}}}),Be=new le({name:\"__EnumValue\",description:\"One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.\",fields:function(){return{name:{type:x(Fe),resolve:function(e){return e.name}},description:{type:Fe,resolve:function(e){return e.description}},isDeprecated:{type:x(we),resolve:function(e){return e.isDeprecated}},deprecationReason:{type:Fe,resolve:function(e){return e.deprecationReason}}}}}),Ge=Object.freeze({SCALAR:\"SCALAR\",OBJECT:\"OBJECT\",INTERFACE:\"INTERFACE\",UNION:\"UNION\",ENUM:\"ENUM\",INPUT_OBJECT:\"INPUT_OBJECT\",LIST:\"LIST\",NON_NULL:\"NON_NULL\"}),Je=new ye({name:\"__TypeKind\",description:\"An enum describing what kind of type a given `__Type` is.\",values:{SCALAR:{value:Ge.SCALAR,description:\"Indicates this type is a scalar.\"},OBJECT:{value:Ge.OBJECT,description:\"Indicates this type is an object. `fields` and `interfaces` are valid fields.\"},INTERFACE:{value:Ge.INTERFACE,description:\"Indicates this type is an interface. `fields` and `possibleTypes` are valid fields.\"},UNION:{value:Ge.UNION,description:\"Indicates this type is a union. `possibleTypes` is a valid field.\"},ENUM:{value:Ge.ENUM,description:\"Indicates this type is an enum. `enumValues` is a valid field.\"},INPUT_OBJECT:{value:Ge.INPUT_OBJECT,description:\"Indicates this type is an input object. `inputFields` is a valid field.\"},LIST:{value:Ge.LIST,description:\"Indicates this type is a list. `ofType` is a valid field.\"},NON_NULL:{value:Ge.NON_NULL,description:\"Indicates this type is a non-null. `ofType` is a valid field.\"}}}),ze=(x(Ve),x(Fe),x(Fe),Object.freeze([Ve,Ue,Me,Ce,Pe,ke,Be,Je]),function(){function e(e){this.name=e.name,this.description=e.description,this.locations=e.locations,this.isRepeatable=null!=e.isRepeatable&&e.isRepeatable,this.extensions=e.extensions&&s(e.extensions),this.astNode=e.astNode,e.name||u(0,\"Directive must be named.\"),Array.isArray(e.locations)||u(0,\"@\".concat(e.name,\" locations must be an Array.\"));var n=e.args||{};l(n)&&!Array.isArray(n)||u(0,\"@\".concat(e.name,\" args must be an object with argument names as keys.\")),this.args=re(n).map(function(e){var n=e[0],t=e[1];return{name:n,description:void 0===t.description?null:t.description,type:t.type,defaultValue:t.defaultValue,extensions:t.extensions&&s(t.extensions),astNode:t.astNode}})}var n=e.prototype;return n.toString=function(){return\"@\"+this.name},n.toConfig=function(){return{name:this.name,description:this.description,locations:this.locations,args:M(this.args),isRepeatable:this.isRepeatable,extensions:this.extensions,astNode:this.astNode}},e}());y(ze),d(ze);var Qe=new ze({name:\"include\",description:\"Directs the executor to include this field or fragment only when the `if` argument is true.\",locations:[Ie.FIELD,Ie.FRAGMENT_SPREAD,Ie.INLINE_FRAGMENT],args:{if:{type:x(we),description:\"Included when true.\"}}}),Ye=new ze({name:\"skip\",description:\"Directs the executor to skip this field or fragment when the `if` argument is true.\",locations:[Ie.FIELD,Ie.FRAGMENT_SPREAD,Ie.INLINE_FRAGMENT],args:{if:{type:x(we),description:\"Skipped when true.\"}}}),qe=new ze({name:\"deprecated\",description:\"Marks an element of a GraphQL schema as no longer supported.\",locations:[Ie.FIELD_DEFINITION,Ie.ENUM_VALUE],args:{reason:{type:Fe,description:\"Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax (as specified by [CommonMark](https://commonmark.org/).\",defaultValue:\"No longer supported\"}}}),He=Object.freeze([Qe,Ye,qe]),Xe=function(){function e(e){e&&e.assumeValid?this.__validationErrors=[]:(this.__validationErrors=void 0,l(e)||u(0,\"Must provide configuration object.\"),!e.types||Array.isArray(e.types)||u(0,'\"types\" must be Array if provided but got: '.concat(r(e.types),\".\")),!e.directives||Array.isArray(e.directives)||u(0,'\"directives\" must be Array if provided but got: '+\"\".concat(r(e.directives),\".\")),!e.allowedLegacyNames||Array.isArray(e.allowedLegacyNames)||u(0,'\"allowedLegacyNames\" must be Array if provided but got: '+\"\".concat(r(e.allowedLegacyNames),\".\"))),this.extensions=e.extensions&&s(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=e.extensionASTNodes,this.__allowedLegacyNames=e.allowedLegacyNames||[],this._queryType=e.query,this._mutationType=e.mutation,this._subscriptionType=e.subscription,this._directives=e.directives||He;var n=[this._queryType,this._mutationType,this._subscriptionType,Ve].concat(e.types),t=Object.create(null);t=n.reduce(te,t),t=this._directives.reduce(ie,t),this._typeMap=t,this._possibleTypeMap=Object.create(null),this._implementations=Object.create(null);for(var i,o=0,a=me(this._typeMap);o<a.length;o++)if(g(i=a[o]))for(var c,p=0,f=i.getInterfaces();p<f.length;p++)if(b(c=f[p])){var d=this._implementations[c.name];d?d.push(i):this._implementations[c.name]=[i]}}var n=e.prototype;return n.getQueryType=function(){return this._queryType},n.getMutationType=function(){return this._mutationType},n.getSubscriptionType=function(){return this._subscriptionType},n.getTypeMap=function(){return this._typeMap},n.getType=function(e){return this.getTypeMap()[e]},n.getPossibleTypes=function(e){return O(e)?e.getTypes():this._implementations[e.name]||[]},n.isPossibleType=function(e,n){if(null==this._possibleTypeMap[e.name]){for(var t=Object.create(null),i=0,r=this.getPossibleTypes(e);i<r.length;i++)t[r[i].name]=!0;this._possibleTypeMap[e.name]=t}return!!this._possibleTypeMap[e.name][n.name]},n.getDirectives=function(){return this._directives},n.getDirective=function(e){return he(this.getDirectives(),function(n){return n.name===e})},n.toConfig=function(){return{query:this.getQueryType(),mutation:this.getMutationType(),subscription:this.getSubscriptionType(),types:me(this.getTypeMap()),directives:this.getDirectives().slice(),extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes||[],assumeValid:void 0!==this.__validationErrors,allowedLegacyNames:this.__allowedLegacyNames}},e}();y(Xe),console.log({GraphQLObjectType:le,GraphQLSchema:Xe})}]);","extractedComments":[]}